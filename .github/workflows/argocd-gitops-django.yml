
name: gitops argocd with django project

on:
  push:
    branches: [ "master" ]
    paths-ignore:
            - 'manifest-files/**' # ignore changes to manifest files to prevent loop

env: 
    PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
    ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
    ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
    GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
    GIT_EMAIL: ${{ secrets.GIT_EMAIL }}    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        python manage.py test
    - name: Debug Docker tag
      run: echo "MyTag = ${{ secrets.DOCKERHUB_USERNAME }}/django-app:${{ github.sha }}"  
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/django-app:${{ github.sha }} .
    - name: Scan image with Trivy (fail on CRITICAL/HIGH)   
      run: |
        docker run --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:latest \
          image ${{ secrets.DOCKERHUB_USERNAME }}/django-app:${{ github.sha }}
    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
    - name: Push Docker image DockerHub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-app:${{ github.sha }}
  deploy:
    needs: build
    runs-on: ubuntu-latest 
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
         token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
         fetch-depth: 0  
    - name: install kubectl
      run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.7/2024-12-12/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
    - name: Install ArgoCD CLI
      run: |
         curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
         chmod +x argocd
         sudo mv argocd /usr/local/bin/argocd
    - name: Login to ArgoCD
      run: |
         argocd login ${{ secrets.ARGOCD_SERVER }} \
         --username ${{ secrets.ARGOCD_USERNAME }} \
         --password ${{ secrets.ARGOCD_PASSWORD }} \
         --insecure
         
    - name: Update deployment.yaml with newly built image
      run: |
         git config user.name "${{ secrets.GIT_USERNAME }}"
         git config user.email "${{ secrets.GIT_EMAIL }}"
         git fetch origin
         git checkout master
         git pull origin master
         pwd
         cat manifest-files/deployment.yaml
         pwd
         sed -i "s+${{ secrets.DOCKERHUB_USERNAME }}/django-app.*+${{ secrets.DOCKERHUB_USERNAME }}/django-app:${{ github.sha }}+g" manifest-files/deployment.yaml
         cat manifest-files/deployment.yaml
    - name: Commit and Push Updated deployment.yaml
      run: |
         git config user.name "${{ secrets.GIT_USERNAME }}"
         git config user.email "${{ secrets.GIT_EMAIL }}"
         git remote set-url origin https://${{ secrets.GIT_USERNAME }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git
         git fetch origin
         git checkout master
         git pull origin master
         git add .
         git commit -m "Update image to django-app:${{ github.sha }}"
         git push origin master
      
      
